buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
    classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '1.5.1.RELEASE'
		classpath group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: '1.0.0-M3'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'pmd'
apply plugin: 'findbugs'

jar {
	baseName = 'robot'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	testCompile.exclude group: 'junit', module: 'junit'
}

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter'
  compile group: 'javax.inject', name: 'javax.inject', version: '1'

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0-M3'
  testRuntime group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.0.0-M3'
  testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0-M3'
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.3'
}

checkstyle {
	toolVersion = '7.5.1'
}

pmd {
  toolVersion = '5.5.3'
}

findbugs {
  toolVersion = '3.0.1'
  sourceSets = [sourceSets.main]
  effort = 'max'
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled false
    html.enabled true
  }
}

project.afterEvaluate {
  def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

  // configure jacoco to analyze the junitPlatformTest task
  jacoco {
    // this tool version is compatible with
    toolVersion = "0.7.6.201602180812"
    applyTo junitPlatformTestTask
  }

  // create junit platform jacoco task
  def junitPlatformJacocoReport = project.task(type: JacocoReport, "junitPlatformJacocoReport",
    {
      sourceDirectories = files("./src/main")
      classDirectories = files("$buildDir/classes/main")
      executionData junitPlatformTestTask
    })

  build.dependsOn(junitPlatformTestTask, junitPlatformJacocoReport)
}
